# 存在チェック用関数の定義
function exists { which $1 &> /dev/null }

# PATH
if [ -d ~/devel/bin ]; then
    export PATH=~/devel/bin:$PATH
fi
if [ -d ~/devel/maven ]; then
    export MAVEN_HOME=~/devel/maven
    export PATH=$MAVEN_HOME/bin:$PATH
fi
if [ -d /usr/java/jdk ]; then
    export JAVA_HOME=/usr/java/jdk
    export PATH=$JAVA_HOME/bin:$PATH
fi
if [ -d ~/devel/gradle ]; then
    export GRADLE_HOME=~/devel/gradle
    export PATH=$GRADLE_HOME/bin:$PATH
fi
if [ -d ~/devel/groovy ]; then
    export GROOVY_HOME=~/devel/groovy
    export PATH=$GROOVY_HOME/bin:$PATH
fi
if [ -d ~/devel/tomcat ]; then
    export TOMCAT_HOME=~/devel/tomcat
    export PATH=$TOMCAT_HOME/bin:$PATH
fi
if [ -d ~/devel/ant ]; then
    export ANT_HOME=~/devel/ant
    export PATH=$ANT_HOME/bin:$PATH
fi
if [ -d ~/github/git-tasukete ]; then
    export PATH=~/github/git-tasukete:$PATH
fi

# asakusa fw
if [ -d ~/asakusa-develop ]; then
    . ~/asakusa-develop/.rikisha_profile
fi

# Python Initialize script
export PYTHONSTARTUP=~/.pyrc

# pip cache
export PIP_DOWNLOAD_CACHE=~/.pip_cache

# virtualenvwrapper
if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
    . /usr/local/bin/virtualenvwrapper.sh
    export VIRTUALENV_USE_DISTRIBUTE=1
fi

# pythonbrew
if [ -f ~/.pythonbrew/etc/bashrc ]; then
    . ~/.pythonbrew/etc/bashrc
fi

if [ -d ~/pkg/pyside-sandbox ]; then
    export PYSIDESANDBOXPATH=$HOME/pkg/pyside-sandbox
    export PATH=$PYSIDESANDBOXPATH/bin:$PATH
    export PYTHONPATH=$PYSIDESANDBOXPATH/lib/python2.7/site-packages:$PYTHONPATH
    export LD_LIBRARY_PATH=$PYSIDESANDBOXPATH/lib:$LD_LIBRARY_PATH
    export PKG_CONFIG_PATH=$PYSIDESANDBOXPATH/lib/pkgconfig:$PKG_CONFIG_PATH
fi

# EDITOR
export EDITOR=/usr/bin/vim

# less options
export LESS=-rgMj10

# texlive
if [ -d /usr/local/texlive ]; then
    export PATH=$PATH:/usr/local/texlive/2011/bin/x86_64-linux
fi

# aliases
if exists nautilus; then
    alias exp=nautilus
fi
if exists colordiff; then
    alias diff=colordiff
fi
if exists lv; then
    alias lv='lv -c'
fi
if exists gvim; then
    alias vim='gvim -p'
fi

# git-flow の補完
if [ -f ~/.git-flow-completion.zsh ]; then
    source ~/.git-flow-completion.zsh
fi

# Git だろうと Mercurial だろうと、ブランチ名をzshのプロンプトにスマートに表示する方法 - ess sup
# http://d.hatena.ne.jp/mollifier/20090814/p1
autoload -Uz vcs_info
zstyle ':vcs_info:*' formats '(%s)-[%b]'
zstyle ':vcs_info:*' actionformats '(%s)-[%b|%a]'
precmd () {
    psvar=()
    LANG=en_US.UTF-8 vcs_info
    [[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
RPROMPT="%1(v|%F{green}%1v%f|)"

# ls の表示色設定
eval `dircolors ~/.colorrc`
alias ls='ls -F --color=auto'

# zshでsshのホスト名をknown_hostsから補完する - C0mputerClub - Trashbox
# http://trashbox.g.hatena.ne.jp/lurker/20071109/1194586015
function print_known_hosts (){
    if [ -f $HOME/.ssh/known_hosts ]; then
        cat $HOME/.ssh/known_hosts | tr ',' ' ' | cut -d' ' -f1
    fi
}
_cache_hosts=($( print_known_hosts ))


# zsh history search
# https://github.com/mooz/percol
if exists percol; then
    function percol_select_history() {
        local tac
        exists gtac && tac=gtac || tac=tac
        BUFFER=$($tac $HISTFILE | sed 's/^: [0-9]*:[0-9]*;//' | percol --query "$LBUFFER")
        CURSOR=$#BUFFER         # move cursor
        zle -R -c               # refresh
    }

    zle -N percol_select_history
    bindkey '^R' percol_select_history
fi

# zsh directory-stack search
if exists percol; then
    function percol_select_dirstack_entry() {
        BUFFER=$(dirs -pl | percol --query "$LBUFFER")
        CURSOR=$#BUFFER
        zle -R -c
    }
    zle -N percol_select_dirstack_entry
    bindkey '^[c' percol_select_dirstack_entry
fi
